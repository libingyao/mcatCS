// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kdt3.proto

#ifndef PROTOBUF_kdt3_2eproto__INCLUDED
#define PROTOBUF_kdt3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_kdt3_2eproto();
void protobuf_AssignDesc_kdt3_2eproto();
void protobuf_ShutdownFile_kdt3_2eproto();

class Node;

// ===================================================================

class Node : public ::google::protobuf::Message {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  void Swap(Node* other);

  // implements Message ----------------------------------------------

  Node* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 p_max = 1;
  inline int p_max_size() const;
  inline void clear_p_max();
  static const int kPMaxFieldNumber = 1;
  inline ::google::protobuf::int64 p_max(int index) const;
  inline void set_p_max(int index, ::google::protobuf::int64 value);
  inline void add_p_max(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      p_max() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_p_max();

  // repeated int64 son_max = 2;
  inline int son_max_size() const;
  inline void clear_son_max();
  static const int kSonMaxFieldNumber = 2;
  inline ::google::protobuf::int64 son_max(int index) const;
  inline void set_son_max(int index, ::google::protobuf::int64 value);
  inline void add_son_max(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      son_max() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_son_max();

  // repeated double x = 3;
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline double x(int index) const;
  inline void set_x(int index, double value);
  inline void add_x(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      x() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_x();

  // repeated double y = 4;
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline double y(int index) const;
  inline void set_y(int index, double value);
  inline void add_y(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      y() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_y();

  // repeated int64 son = 5;
  inline int son_size() const;
  inline void clear_son();
  static const int kSonFieldNumber = 5;
  inline ::google::protobuf::int64 son(int index) const;
  inline void set_son(int index, ::google::protobuf::int64 value);
  inline void add_son(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      son() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_son();

  // @@protoc_insertion_point(class_scope:Node)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > p_max_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > son_max_;
  ::google::protobuf::RepeatedField< double > x_;
  ::google::protobuf::RepeatedField< double > y_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > son_;
  friend void  protobuf_AddDesc_kdt3_2eproto();
  friend void protobuf_AssignDesc_kdt3_2eproto();
  friend void protobuf_ShutdownFile_kdt3_2eproto();

  void InitAsDefaultInstance();
  static Node* default_instance_;
};
// ===================================================================


// ===================================================================

// Node

// repeated int64 p_max = 1;
inline int Node::p_max_size() const {
  return p_max_.size();
}
inline void Node::clear_p_max() {
  p_max_.Clear();
}
inline ::google::protobuf::int64 Node::p_max(int index) const {
  // @@protoc_insertion_point(field_get:Node.p_max)
  return p_max_.Get(index);
}
inline void Node::set_p_max(int index, ::google::protobuf::int64 value) {
  p_max_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.p_max)
}
inline void Node::add_p_max(::google::protobuf::int64 value) {
  p_max_.Add(value);
  // @@protoc_insertion_point(field_add:Node.p_max)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Node::p_max() const {
  // @@protoc_insertion_point(field_list:Node.p_max)
  return p_max_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Node::mutable_p_max() {
  // @@protoc_insertion_point(field_mutable_list:Node.p_max)
  return &p_max_;
}

// repeated int64 son_max = 2;
inline int Node::son_max_size() const {
  return son_max_.size();
}
inline void Node::clear_son_max() {
  son_max_.Clear();
}
inline ::google::protobuf::int64 Node::son_max(int index) const {
  // @@protoc_insertion_point(field_get:Node.son_max)
  return son_max_.Get(index);
}
inline void Node::set_son_max(int index, ::google::protobuf::int64 value) {
  son_max_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.son_max)
}
inline void Node::add_son_max(::google::protobuf::int64 value) {
  son_max_.Add(value);
  // @@protoc_insertion_point(field_add:Node.son_max)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Node::son_max() const {
  // @@protoc_insertion_point(field_list:Node.son_max)
  return son_max_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Node::mutable_son_max() {
  // @@protoc_insertion_point(field_mutable_list:Node.son_max)
  return &son_max_;
}

// repeated double x = 3;
inline int Node::x_size() const {
  return x_.size();
}
inline void Node::clear_x() {
  x_.Clear();
}
inline double Node::x(int index) const {
  // @@protoc_insertion_point(field_get:Node.x)
  return x_.Get(index);
}
inline void Node::set_x(int index, double value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.x)
}
inline void Node::add_x(double value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:Node.x)
}
inline const ::google::protobuf::RepeatedField< double >&
Node::x() const {
  // @@protoc_insertion_point(field_list:Node.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< double >*
Node::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:Node.x)
  return &x_;
}

// repeated double y = 4;
inline int Node::y_size() const {
  return y_.size();
}
inline void Node::clear_y() {
  y_.Clear();
}
inline double Node::y(int index) const {
  // @@protoc_insertion_point(field_get:Node.y)
  return y_.Get(index);
}
inline void Node::set_y(int index, double value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.y)
}
inline void Node::add_y(double value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:Node.y)
}
inline const ::google::protobuf::RepeatedField< double >&
Node::y() const {
  // @@protoc_insertion_point(field_list:Node.y)
  return y_;
}
inline ::google::protobuf::RepeatedField< double >*
Node::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:Node.y)
  return &y_;
}

// repeated int64 son = 5;
inline int Node::son_size() const {
  return son_.size();
}
inline void Node::clear_son() {
  son_.Clear();
}
inline ::google::protobuf::int64 Node::son(int index) const {
  // @@protoc_insertion_point(field_get:Node.son)
  return son_.Get(index);
}
inline void Node::set_son(int index, ::google::protobuf::int64 value) {
  son_.Set(index, value);
  // @@protoc_insertion_point(field_set:Node.son)
}
inline void Node::add_son(::google::protobuf::int64 value) {
  son_.Add(value);
  // @@protoc_insertion_point(field_add:Node.son)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Node::son() const {
  // @@protoc_insertion_point(field_list:Node.son)
  return son_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Node::mutable_son() {
  // @@protoc_insertion_point(field_mutable_list:Node.son)
  return &son_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_kdt3_2eproto__INCLUDED
